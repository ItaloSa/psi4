service: aws-inmet-app-serverless

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  timeout: 30
  region: us-east-1
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    TZ: 'America/Sao_Paulo'
    INPT_STREAM: ${self:resources.Resources.inKinesisStream.Properties.Name}
    OUTP_STREAM: ${self:resources.Resources.outKinesisStream.Properties.Name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - kinesis:*
        - sqs:*
      Resource: '*'

functions:
  process:
    handler: handler.main
    runtime: python3.6
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - inKinesisStream
              - Arn
  populate:
    handler: index.populate
    runtime: nodejs12.x
    events: 
      - http:
          path: start
          method: get
  consumer:
    handler: index.consumer
    runtime: nodejs12.x
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - outKinesisStream
              - Arn

resources:
  Resources:
    inKinesisStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:service}-${self:provider.stage}-in-stream
        RetentionPeriodHours: 24
        ShardCount: 1
    outKinesisStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:service}-${self:provider.stage}-out-stream
        RetentionPeriodHours: 24
        ShardCount: 1
    
package:
  exclude:
    - package-lock.json
    - .vscode/**
    - .serverless/**